{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAiC;AACqB;AACZ;AACJ;AACX;AAC3B;AACA,iBAAiB,6DAAa;AAC9B;AACA;AACA;AACA;AACA,IAAI,mEAAa;AACjB,MAAM,mDAAG;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,QAAQ;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,EAAE,6DAAa,8DAA8D;AAC7E,eAAe,6DAAa;AAC5B;AACA,EAAE,qDAAM,CAAC,2DAAK;AACd,CAAC;AACD;AACA;AACA;AACA;AACA,EAAE,qDAAM,CAAC,2DAAK;AACd,CAAC;AACD;AACA,iEAAe,GAAG,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;AC/EmC;AAChB;AACE;AACE;AAC1C;AAC2B;AAC3B;AACA;AACA,mBAAmB,mEAAa;AAChC,MAAM,mDAAG;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,6DACN;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,SAAS;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,6BAA6B;AACtD;AACA,YAAY,6DAAa;AACzB;AACA;AACA,gCAAgC,GAAG;AACnC;AACA;AACA,cAAc;AACd,+CAA+C,uBAAuB,EAAE,iCAAiC,GAAG,eAAe,GAAG,EAAE;AAChI;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA,cAAc,uBAAuB,OAAO,kCAAkC,MAAM;AACpF;AACA;AACA,0BAA0B,2CAA2C,IAAI,qCAAqC;AAC9G,uBAAuB,iCAAiC,GAAG,eAAe,GAAG,EAAE;AAC/E;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mEAAa;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,4DAAM,CAAC,2DAAK;AACjD,sCAAsC,4DAAM,CAAC,2DAAK;AAClD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,6DAAa;AACf,EAAE,6DAAa;AACf;AACA;AACA;AACA;AACA;AACA,EAAE,4DAAM;AACR,CAAC;AACD;AACA,iEAAe,IAAI,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjIS;AACE;AACM;AACF;AACR;AACM;AACF;AACc;AACR;AACrC;AAWE;;;;;;;;;;;;;;;;;;;;;;ACpBoD;AACS;AAC/D;AACA;AACA,EAAE,mEAAa;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qDAAS;AAC1C,iCAAiC,oDAAQ;AACzC,iCAAiC,kDAAM;AACvC;AACA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;AC9BiC;AACZ;AACJ;AACE;AAC2B;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,uCAAuC,GAAG;AAClG;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,uEAAuB;AAC7B;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,uEAAuB;AAC7B;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,6DAAa;AAC5C;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ,4DAAM,CAAC,2DAAK;AACpB,QAAQ;AACR;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,SAAS,mEAAa;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,YAAY,EAAC;;;;;;;;;;;;;;;;;;;;;;;AC3IY;AACF;AACmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,4DAAM,CAAC,2DAAK;AACd,CAAC;AACD;AACA,iCAAiC,kDAAM;AACvC;AACA,iEAAe,GAAG,EAAC;;;;;;;;;;;;;;;;;;;;;;;AC5CmC;AACd;AACF;AACtC;AACA;AACA,EAAE,mEAAa;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,4DAAM,CAAC,2DAAK;AACd,CAAC;AACD;AACA,iEAAe,OAAO,EAAC;;;;;;;;;;;;;;;;;;;;;;ACnB+B;AACS;AAC/D;AACA;AACA,EAAE,mEAAa;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qDAAS;AAC1C,iCAAiC,oDAAQ;AACzC,iCAAiC,kDAAM;AACvC;AACA,iEAAe,QAAQ,EAAC;;;;;;;;;;;;;;;;;ACjCxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,yCAAyC;AACzE,eAAe,GAAG;AAClB,kCAAkC,MAAM;AACxC,yCAAyC,YAAY;AACrD,4BAA4B,IAAI;AAChC;AACA;AACA,UAAU;AACV,kEAAkE,UAAU,EAAE,yBAAyB;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;;;;;;;;;AC1Be;AACZ;AACf;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,6DAAa;AACnC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,mEAAa;AACxC;AACA,QAAQ,mDAAG;AACX;AACA;AACA,YAAY,cAAc,+CAA+C;AACzE,qCAAqC,8BAA8B;AACnE,wCAAwC,MAAM;AAC9C,+CAA+C,YAAY;AAC3D;AACA,gBAAgB;AAChB,wEAAwE,UAAU,EAAE,yBAAyB;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;;;;;;;;;ACtDiC;AACZ;AACF;AACb;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,6DAAa;AACnC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,UAAU,6DAAa,+BAA+B,sBAAsB;AAC5E;AACA;AACA;AACA;AACA,IAAI,4DAAM,GAAG,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,IAAI,mEAAa;AACjB,QAAQ,mDAAG;AACX;AACA;AACA;AACA,sCAAsC,eAAe;AACrD;AACA,iDAAiD,kBAAkB;AACnE,+CAA+C,kBAAkB;AACjE,cAAc;AACd;AACA;AACA;AACA,cAAc;AACd,sBAAsB,oCAAoC;AAC1D;AACA;AACA;AACA;AACA,kDAAkD,GAAG;AACrD;AACA,wCAAwC,MAAM;AAC9C,+CAA+C,YAAY;AAC3D;AACA,gBAAgB;AAChB,uEAAuE,UAAU,EAAE,yBAAyB;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,mEAAa;AACjB,MAAM,mDAAG;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,MAAM,EAAC;;;;;;;;;;;;;;;;;;;;;;;AChJgC;AACd;AACF;AACtC;AACA;AACA,EAAE,mEAAa;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,4DAAM,CAAC,2DAAK;AACd,CAAC;AACD;AACA,iEAAe,OAAO,EAAC;;;;;;;;;;;;;;;;;;;;;;ACnBgB;AACE;AACzC;AACA;AACA;AACA;AACA;AACA,EAAE,4DAAM,GAAG,cAAc;AACzB,CAAC;AACD,6DAAO;AACP;AACA;AACA,EAAE,4DAAM,GAAG,cAAc;AACzB,CAAC;AACD;AACA,iEAAe,wDAAM,EAAC;;;;;;;;;;;;;;;;;ACftB;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,aAAa,EAAC;;;;;;;;;;;;;;;ACNd;AACf,8EAA8E,iBAAiB,QAAQ,KAAK;AAC5G;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACA;;;;;;;;;;;;;;;;;AClBkC;AACN;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,WAAW;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,WAAW;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kBAAkB;AACpD,yCAAyC,qBAAqB;AAC9D,4BAA4B,aAAa;AACzC;AACA;AACA,SAAS;AACT,gCAAgC,SAAS;AACzC,gCAAgC,SAAS;AACzC;AACA;AACA;AACA,IAAI,0DAAU,4BAA4B,MAAM;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,oBAAoB,EAAE,yBAAyB;AACxH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,wBAAwB;AACxB,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sBAAsB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,UAAU;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,aAAa;AAC/C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,yDAAyD,eAAe,iBAAiB,oBAAoB,IAAI,mBAAmB;AACpI,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA,iEAAe,OAAO,EAAC;;;;;;;;;;;;;;;;;;;;ACpPS;AACK;AACrC;AACA;AACA;AACA,IAAI,sBAAsB,sDAAI,EAAE;AAChC,IAAI,2BAA2B,uDAAK,EAAE;AACtC,IAAI,8BAA8B,0DAAQ,EAAE;AAC5C,IAAI,0BAA0B,sDAAI,EAAE;AACpC,IAAI,4BAA4B,wDAAM,EAAE;AACxC,IAAI,2BAA2B,uDAAK,EAAE;AACtC,IAAI,yBAAyB,qDAAG,EAAE;AAClC,IAAI,6BAA6B,yDAAO,EAAE;AAC1C,IAAI,kCAAkC,8DAAY,EAAE;AACpD,IAAI,8BAA8B,0DAAQ,EAAE;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,0DAAQ;AACzE;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,iEAAe,MAAM,EAAC;;;;;;;;;;;;;;;;;AChEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;ACboB;AACV;AACE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,IAAI;AACxF;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA,2BAA2B,KAAK;AAChC,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,qDAAM,CAAC,qDAAK;AACd;AACA;AACA;AACA,6BAA6B,YAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,cAAc;AACxB;AACA;AACA,mCAAmC,KAAK;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,oCAAoC,0DAAgB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,yEAA+B;AACvD;AACA,MAAM,qDAAM,CAAC,qDAAK;AAClB;AACA;AACA;AACA,wBAAwB,6EAAmC;AAC3D,MAAM,uDAAa,iBAAiB,yBAAyB,SAAS;AACtE,MAAM,qDAAM,CAAC,qDAAK;AAClB;AACA,IAAI;AACJ;AACA,+BAA+B,YAAY;AAC3C,+BAA+B,YAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,yCAAyC,YAAY;AACrD;AACA,qBAAqB,iBAAiB;AACtC,MAAM,qDAAM,CAAC,qDAAK;AAClB;AACA,IAAI;AACJ,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,sDAAY;AACtB;AACA,IAAI,qDAAM,CAAC,qDAAK;AAChB,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,qDAAM,CAAC,qDAAK;AAChB,IAAI;AACJ;AACA;AACA;AACA;AAC6E;;;;;;;;;UCzL7E;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,IAAI;WACJ;WACA;WACA,IAAI;WACJ;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,CAAC;WACD;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;WACA,sGAAsG;WACtG;WACA;WACA;WACA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA,EAAE;WACF;WACA;;;;;WChEA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;UENA;UACA;UACA;UACA","sources":["webpack://netlify-functions-express/./components/add.js","webpack://netlify-functions-express/./components/home.js","webpack://netlify-functions-express/./components/index.js","webpack://netlify-functions-express/./components/login.js","webpack://netlify-functions-express/./components/makeVoteList.js","webpack://netlify-functions-express/./components/nav.js","webpack://netlify-functions-express/./components/notFound.js","webpack://netlify-functions-express/./components/register.js","webpack://netlify-functions-express/./components/renderSelectedStoreList.js","webpack://netlify-functions-express/./components/voted.js","webpack://netlify-functions-express/./components/voting.js","webpack://netlify-functions-express/./components/welcome.js","webpack://netlify-functions-express/./index.js","webpack://netlify-functions-express/./utils/createElement.js","webpack://netlify-functions-express/./utils/fetchimage.js","webpack://netlify-functions-express/./utils/firebase.js","webpack://netlify-functions-express/./utils/loadMap.js","webpack://netlify-functions-express/./utils/render.js","webpack://netlify-functions-express/./utils/route.js","webpack://netlify-functions-express/./utils/sign.js","webpack://netlify-functions-express/webpack/bootstrap","webpack://netlify-functions-express/webpack/runtime/async module","webpack://netlify-functions-express/webpack/runtime/define property getters","webpack://netlify-functions-express/webpack/runtime/hasOwnProperty shorthand","webpack://netlify-functions-express/webpack/runtime/make namespace object","webpack://netlify-functions-express/webpack/before-startup","webpack://netlify-functions-express/webpack/startup","webpack://netlify-functions-express/webpack/after-startup"],"sourcesContent":["import render from '../index.js';\r\nimport createElement from '../utils/createElement.js';\r\nimport { db } from '../utils/firebase.js';\r\nimport route from '../utils/route.js';\r\nimport Nav from './nav.js';\r\n\r\nlet uuid = await db.collection('votes').doc();\r\n\r\nconst Add = async () => {\r\n  \r\n  const domStr = () =>\r\n    createElement(`\r\n    ${Nav()}\r\n    <div id=\"add\">\r\n      <form class=\"add-form\">\r\n      <h1 class=\"add-title\">투표 만들기 <a href=\"/\" class=\"close\">X</a></h1>\r\n      <input type=\"text\" class=\"vote-title\" placeholder=\"투표 이름을 작성해주세요\" />\r\n      <input type=\"date\" class=\"deadline\"/>\r\n      <div class=\"class-toggle\">\r\n      <input type=\"radio\" id=\"single-vote\" class=\"vote-type\" name=\"vote-type\" hidden/>\r\n      <label for=\"single-vote\">단일투표</label>\r\n      <input type=\"radio\" id=\"multi-vote\" class=\"vote-type\" name=\"vote-type\" hidden/>\r\n      <label for=\"multi-vote\">다중투표</label>\r\n      </div>\r\n      <a class=\"btn-add\" href=\"/makeVoteList/:${uuid.id}\">추가하기</a>\r\n      <div class=\"warning-message\">입력되지 않은 항목이 있습니다.</div>\r\n      </form>\r\n    </div>`);\r\n\r\n  return domStr();\r\n};\r\n\r\nconst $root = document.getElementById('root');\r\n\r\n$root.addEventListener('click', async e => {\r\n  if (!e.target.matches('.btn-add')) return;\r\n\r\n  e.preventDefault();\r\n\r\n  const voteId = [...$root.querySelectorAll('.vote-type')].find(type => type.checked)?.id;\r\n  const title = $root.querySelector('.vote-title').value;\r\n  const deadline = $root.querySelector('.deadline').value;\r\n  const voteType = document.querySelector(`label[for=${voteId}]`)?.textContent;\r\n\r\n  if (!title || !deadline || !voteId) {\r\n    document.querySelector('.warning-message').style.display = 'block';\r\n    return;\r\n  }\r\n\r\n  document.querySelector('.warning-message').style.display = 'none';\r\n\r\n  const user = localStorage.getItem('username');\r\n\r\n  const data = {\r\n    title,\r\n    deadline,\r\n    voteType,\r\n    timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    stores: [],\r\n  };\r\n\r\n  uuid.set({\r\n    owner: user,\r\n    id: uuid.id,\r\n    ...data,\r\n  });\r\n\r\n  db.collection('users').doc(user).collection('voteList').doc(uuid.id).set({});\r\n  uuid = await db.collection('votes').doc();\r\n\r\n  render(route(e));\r\n});\r\n\r\n$root.addEventListener('click', e => {\r\n  if (!e.target.matches('.close')) return;\r\n\r\n  render(route(e));\r\n});\r\n\r\nexport default Add;\r\n","import createElement from \"../utils/createElement.js\";\r\nimport route from \"../utils/route.js\";\r\nimport render from \"../utils/render.js\";\r\nimport { db } from \"../utils/firebase.js\";\r\n\r\nimport Nav from \"./nav.js\";\r\n\r\nconst Home = async () => {\r\n  const homeBody = createElement(`\r\n    ${Nav()}\r\n    <div id=\"home\"></div>\r\n  `);\r\n\r\n  const loginedEmail = localStorage.getItem(\"username\");\r\n  const username = loginedEmail.split(\"@\")[0];\r\n\r\n  const getUserVoteList = async () => {\r\n    const docs = await db\r\n      .collection(\"votes\")\r\n      .orderBy(\"timestamp\", \"desc\")\r\n      .where(\"owner\", \"==\", loginedEmail)\r\n      .get();\r\n\r\n    let vote = [];\r\n    docs.forEach((doc) => {\r\n      vote = [...vote, doc.data()];\r\n    });\r\n    return vote;\r\n  };\r\n\r\n  const isVoting = (deadline) => {\r\n    const date = new Date().getTime();\r\n    const voteDate = new Date(deadline).getTime();\r\n\r\n    return voteDate > date;\r\n  };\r\n\r\n  // prettier-ignore\r\n  const fetchUserVoteList = voteItems => `\r\n    <div class=\"member-title\">${username}님의 투표 목록\r\n     <a href=\"/add\" class=\"add-vote\"><img src=\"../src/plus.png\"/></a>\r\n   </div>\r\n    <div class=\"vote-list-container\">\r\n       ${\r\n        voteItems.length<1? \r\n        `<div class=\"empty\">투표 목록을 추가해주세요</div>`\r\n        :\r\n        voteItems.map(({ id, title, deadline, stores }) => {\r\n          if(stores.length<1){\r\n            db.collection('votes').doc(id).delete(); \r\n            return ``}\r\n          else return `\r\n        <div class=\"card\" id=\"${id}\">\r\n          <button class =\"delete-vote\">⨉</button>\r\n          <div class=\"vote-name\">\r\n            ${title}\r\n            <input class=\"copy-value\" value=\"${window.location.origin}${isVoting(deadline) ? `/voting/:${id}` : `/voted/:${id}`}\"/>\r\n            <div class=\"button-nav\">\r\n            <button class=\"vote-link\">링크공유</button>\r\n            <button class=\"qr-link\">QR</button>\r\n            </div>\r\n          </div>\r\n          <div class=\"vote-date\">${deadline}</div>\r\n          <div class=\"stores\">\r\n            ${stores ? stores.map(({ title }, index) => (index < 3 ? `<span>${title}</span>` : '')).join(' ') : ''}\r\n          </div>\r\n          <div class=\"card-status\">\r\n            <div class=\"${isVoting(deadline) ? 'is-voting' : 'voted'}\">${isVoting(deadline) ? '투표중' : '투표 완료'}</div>\r\n            <a href=\"${isVoting(deadline) ? `/voting/:${id}` : `/voted/:${id}`}\" class=\"more-vote\">더보기</a>\r\n          </div>\r\n        </div> \r\n      `}).join('')}\r\n    </div>\r\n    </div>\r\n    <div id=\"qr\"></div>\r\n    `;\r\n\r\n  const voteItems = await getUserVoteList();\r\n  const voteList = fetchUserVoteList(voteItems);\r\n  const voteListElement = createElement(voteList);\r\n\r\n  homeBody.getElementById(\"home\").append(voteListElement);\r\n  return homeBody;\r\n};\r\n\r\nconst $root = document.getElementById(\"root\");\r\n// 투표 목록 추가 버튼\r\n\r\n$root.addEventListener(\"click\", (e) => {\r\n  if (e.target.closest(\".qr-link\")) {\r\n    const qrElement = document.querySelector(\"#qr\");\r\n\r\n    qrElement.classList.add(\"active\");\r\n    var qrInstance = new QRCode(\"qr\");\r\n\r\n    qrInstance.makeCode(\r\n      e.target.closest(\".vote-name\").querySelector(\".copy-value\").value\r\n    );\r\n  }\r\n  if (e.target.matches(\"#qr\")) {\r\n    document.getElementById(\"qr\").classList.remove(\"active\");\r\n    document.getElementById(\"qr\").innerHTML = ``;\r\n  }\r\n  if (e.target.closest(\".add-vote\")) render(route(e));\r\n  if (e.target.matches(\".more-vote\")) render(route(e));\r\n  if (e.target.closest(\".vote-link\")) {\r\n    const $input = e.target.closest(\".vote-name\").querySelector(\".copy-value\");\r\n    navigator.clipboard.writeText($input.value);\r\n    alert(\"링크 복사가 완료되었습니다!\");\r\n  }\r\n});\r\n\r\n// 투표 삭제\r\n$root.addEventListener(\"click\", async (e) => {\r\n  if (!e.target.matches(\".delete-vote\")) return;\r\n\r\n  const loginedEmail = localStorage.getItem(\"username\");\r\n  const targetId = e.target.closest(\".card\").id;\r\n\r\n  db.collection(\"votes\").doc(targetId).delete();\r\n  db.collection(\"users\")\r\n    .doc(loginedEmail)\r\n    .collection(\"voteList\")\r\n    .doc(targetId)\r\n    .delete();\r\n\r\n  render();\r\n});\r\n\r\nexport default Home;\r\n","import Home from \"./home.js\";\r\nimport Login from \"./login.js\";\r\nimport Register from \"./register.js\";\r\nimport Welcome from \"./welcome.js\";\r\nimport Add from \"./add.js\";\r\nimport Voting from \"./voting.js\";\r\nimport Voted from \"./voted.js\";\r\nimport MakeVoteList from \"./makeVoteList.js\";\r\nimport NotFound from \"./notFound.js\";\r\n\r\nexport {\r\n  Home,\r\n  Login,\r\n  Add,\r\n  Voting,\r\n  Voted,\r\n  Register,\r\n  Welcome,\r\n  MakeVoteList,\r\n  NotFound,\r\n};\r\n","import createElement from '../utils/createElement.js';\r\nimport { toggleNav, validate, submit } from '../utils/sign.js';\r\n\r\nconst Login = () =>\r\n  createElement(`\r\n    <div class=\"auth-wrapper\">\r\n      <div id=\"login\">\r\n        <ul class=\"class-toggle\">\r\n          <li class=\"signin active\"><a href=\"/login\">로그인</a></li>\r\n          <li class=\"signup\"><a href=\"/register\">회원가입</a></li>\r\n        </ul>\r\n      <form id=\"signin\" class=\"signin-form\">\r\n\r\n        <label for=\"userid\">이메일</label>\r\n        <input type=\"email\" name=\"userid\" autocomplete=\"off\" />\r\n        <div class=\"error-userid\"></div>\r\n        <label for=\"password\">비밀번호</label>\r\n        <input type=\"password\" name=\"password\" autocomplete=\"off\" />\r\n        <div class=\"error-password\"></div>\r\n        <div class=\"error-message\"></div>\r\n        <a href=\"/\" class=\"signin-btn\">로그인</a>\r\n      </form>\r\n    </div>\r\n  </div>\r\n`);\r\n\r\nwindow.addEventListener('click', toggleNav);\r\nwindow.addEventListener('input', validate);\r\nwindow.addEventListener('click', submit);\r\n\r\nexport default Login;\r\n","import createElement from \"../utils/createElement.js\";\r\nimport { db } from \"../utils/firebase.js\";\r\nimport route from \"../utils/route.js\";\r\nimport render from \"../utils/render.js\";\r\nimport renderSelectedStoreList from \"./renderSelectedStoreList.js\";\r\n\r\nconst makeVoteList = (params) => {\r\n  let selectedStoreList = [];\r\n\r\n  window.addEventListener(\"submit\", (e) => {\r\n    if (!e.target.matches(\"#store-keyword\")) return;\r\n    e.preventDefault();\r\n\r\n    kakao.setMap.search(e.target.querySelector(\"#keyword\").value);\r\n  });\r\n\r\n  window.addEventListener(\"click\", async (e) => {\r\n    if (e.target.closest(\"#menu_select\")) {\r\n      document\r\n        .querySelector(\"#menu_select\")\r\n        .addEventListener(\"click\", ({ target }) => {\r\n          if (\r\n            target.closest(\"li\") &&\r\n            target.closest(\"li\").className.includes(\"item\") &&\r\n            !target.matches(\".add-store\")\r\n          ) {\r\n            const id = target.closest(\"li\").className.split(\"-\")[1];\r\n            document.querySelector(\r\n              \"#store-detail\"\r\n            ).innerHTML = `<iframe style=\"height: 100vh;\" src=\"https://place.map.kakao.com/m/${id}\">`;\r\n          }\r\n        });\r\n    }\r\n    if (e.target.matches(\".add-store\")) {\r\n      const $store = e.target.closest(\"li\");\r\n      const selectedStore = {\r\n        countVote: 0,\r\n        id: $store.className.split(\"-\")[1],\r\n        title: $store.querySelector(\".store-name\").textContent,\r\n        description: $store.querySelector(\".store-description\").textContent,\r\n        tel: $store.querySelector(\".tel\").textContent,\r\n        thumbnails: [...$store.querySelectorAll(\".store-image\")].map(($store) =>\r\n          $store.style.backgroundImage.slice(4, -1).replace(/\"/g, \"\")\r\n        ),\r\n        x: $store.querySelector(\".x\").textContent,\r\n        y: $store.querySelector(\".y\").textContent,\r\n      };\r\n\r\n      selectedStoreList = [...selectedStoreList, selectedStore];\r\n\r\n      e.target.disabled = true;\r\n      renderSelectedStoreList(selectedStoreList);\r\n    }\r\n  });\r\n\r\n  window.addEventListener(\"click\", async (e) => {\r\n    if (e.target.matches(\".map-home\")) {\r\n      document.querySelector(\"#menu_voted\").style.display = \"none\";\r\n      document.querySelector(\"#menu_wrap\").style.display = \"block\";\r\n      document.querySelector(\".map-home\").classList.add(\"active\");\r\n      document.querySelector(\".map-list\").classList.remove(\"active\");\r\n    }\r\n    if (e.target.matches(\".map-list\")) {\r\n      document.querySelector(\"#menu_voted\").style.display = \"block\";\r\n      document.querySelector(\"#menu_wrap\").style.display = \"none\";\r\n      document.querySelector(\".map-home\").classList.remove(\"active\");\r\n      document.querySelector(\".map-list\").classList.add(\"active\");\r\n    }\r\n    if (e.target.matches(\".remove-btn\")) {\r\n      selectedStoreList = selectedStoreList.filter(\r\n        (store) => store.id !== e.target.closest(\"li\").id\r\n      );\r\n      renderSelectedStoreList(selectedStoreList);\r\n\r\n      const targetId = e.target.closest(\"li\").id;\r\n      const $addStore = document.querySelector(\r\n        `li.item-${targetId} .add-store`\r\n      );\r\n      if ($addStore) $addStore.disabled = false;\r\n    }\r\n    if (e.target.matches(\".total-submit-btn\")) {\r\n      e.preventDefault();\r\n\r\n      if (selectedStoreList.length < 2) {\r\n        window.alert(\"음식점을 2 곳이상 추가해주세요\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const voteItem = await db.collection(\"votes\").doc(params);\r\n        await voteItem.update({\r\n          stores: firebase.firestore.FieldValue.arrayUnion(\r\n            ...selectedStoreList\r\n          ),\r\n        });\r\n        render(route(e));\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n  });\r\n  if (!window.kakao) {\r\n    window.addEventListener(\"load\", () => {\r\n      kakao.maps.load(() => {\r\n        kakao.setMap.insert(document.querySelector(\"#kakao-map\"));\r\n        kakao.setMap.search(\"이태원 맛집\");\r\n      });\r\n    });\r\n  }\r\n  return createElement(`\r\n    <div class=\"map_wrap\">\r\n      <ul class=\"map-sidebar\">\r\n        <li><button class=\"map-home active\">지도 홈</button></li>\r\n        <li><button class=\"map-list\">투표 목록</button></li>\r\n        <li><a href=\"/home\" class=\"total-submit-btn\">투표 생성</a></li>\r\n      </ul>\r\n      <div id=\"menu_wrap\" style=\"display: flex\">\r\n        <div id=\"menu_select\" class=\"bg_white\">\r\n          <div class=\"option\">\r\n            <div>\r\n              <form id=\"store-keyword\">\r\n                <input type=\"text\" id=\"keyword\" size=\"15\" value=\"강남역 맛집\"/>\r\n                <button type=\"submit\"></button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n          <ul id=\"placesList\"></ul>\r\n          <div id=\"pagination\"></div>\r\n        </div>\r\n        <div id=\"store-detail\"></div>\r\n      </div>\r\n      <div id=\"menu_voted\" style=\"display:none;\">\r\n        투표할 음식점이 없습니다. 음식점을 추가해주세요.\r\n      </div>\r\n      <div id=\"kakao-map\" ></div>\r\n    </div>\r\n  `);\r\n};\r\n\r\nexport default makeVoteList;\r\n","import render from \"../utils/render.js\";\r\nimport route from \"../utils/route.js\";\r\nimport { logout, logoutExpress } from \"../utils/sign.js\";\r\n\r\nconst Nav = () => {\r\n  return window.localStorage.getItem(\"username\")\r\n    ? `<nav>\r\n      <div class=\"nav-wrapper\">\r\n      <a href=\"/\"><img class=\"logo-img\" src=\"../src/logo.png\"></a>\r\n      <ul>\r\n        <li class=\"pconly\"><a href=\"/\">투표 목록</a></li>\r\n        <li class=\"pconly\"><a href=\"/add\">투표 추가</a></li>\r\n        <li class=\"user\">${\r\n          localStorage.getItem(\"username\").split(\"@\")[0]\r\n        }님</li>\r\n        ${\r\n          localStorage.getItem(\"username\")\r\n            ? `<li class=\"logout\">\r\n                <a href=\"/login\">로그아웃</a>\r\n              </li>`\r\n            : \"\"\r\n        }\r\n      </ul>\r\n      </div>\r\n    </nav>\r\n  `\r\n    : `<nav>\r\n    <div class=\"nav-wrapper\">\r\n    <a href=\"/\"><img class=\"logo-img\" src=\"../src/logo.png\"></a>\r\n    <ul>\r\n      <li><a href=\"/add\">새로운 투표 만들기</a></li>\r\n    </ul>\r\n    </div>\r\n  </nav>`;\r\n};\r\n\r\nwindow.addEventListener(\"click\", (e) => {\r\n  if (!e.target.matches(\"nav > ul > li > a\")) return;\r\n\r\n  render(route(e));\r\n});\r\n\r\nwindow.addEventListener(\"click\", logout);\r\n\r\nexport default Nav;\r\n","import createElement from \"../utils/createElement.js\";\r\nimport render from \"../utils/render.js\";\r\nimport route from \"../utils/route.js\";\r\n\r\nconst Welcome = () =>\r\n  createElement(`\r\n  <div id=\"welcome\">\r\n  <p class=\"welcome-emoji\">🎉</p>\r\n  <p class=\"welcome-message\">가입이 완료되었습니다!</p>\r\n    <a href=\"/login\" class=\"login-btn\">로그인 하기</a>\r\n    </div>\r\n`);\r\n\r\nwindow.addEventListener(\"click\", (e) => {\r\n  if (!e.target.matches(\".login-btn\")) return;\r\n\r\n  render(route(e));\r\n});\r\n\r\nexport default Welcome;\r\n","import createElement from '../utils/createElement.js';\r\nimport { toggleNav, validate, submit } from '../utils/sign.js';\r\n\r\nconst Register = () =>\r\n  createElement(`\r\n  <div class=\"auth-wrapper\">\r\n    <div id=\"register\">\r\n      <ul class=\"class-toggle\">\r\n        <li class=\"signin\"><a href=\"/login\">로그인</a></li>\r\n        <li class=\"signup active\"><a href=\"/register\">회원가입</a></li>\r\n      </ul>\r\n\r\n    <form id=\"signup\" class=\"signup-form\">\r\n      <label for=\"userid\">이메일</label>\r\n      <input type=\"email\" name=\"userid\" autocomplete=\"off\" />\r\n      <div class=\"error-userid\"></div>\r\n      <label for=\"password\">비밀번호</label>\r\n      <input type=\"password\" name=\"password\" autocomplete=\"off\" />\r\n      <div class=\"error-password\"></div>\r\n      <label for=\"confirm-password\">비밀번호 확인</label>\r\n      <input type=\"password\" name=\"confirm-password\" autocomplete=\"off\" />\r\n      <div class=\"error-confirm-password\"></div>\r\n      <div class=\"error-message\"></div>\r\n      <a href=\"/welcome\" class=\"signup-btn\">회원가입</a>\r\n    </form>\r\n    </div>\r\n  </div>\r\n`);\r\n\r\nwindow.addEventListener('click', toggleNav);\r\nwindow.addEventListener('input', validate);\r\nwindow.addEventListener('click', submit);\r\n\r\nexport default Register;\r\n","const renderSelectedStoreList = selectedStoreList => {\r\n  // prettier-ignore\r\n  document.querySelector('#menu_voted').innerHTML = `\r\n    ${\r\n      selectedStoreList<1? `\r\n      <div class=\"empty-store\">\r\n        투표할 음식점이 없습니다.\\n\r\n        음식점을 추가해주세요.\r\n      </div>\r\n      `\r\n      :selectedStoreList.map(({ id, title, description, tel, thumbnails }) => `\r\n      <li id=${id}>\r\n        <div class=\"store-name\">${title}</div>\r\n        <div class=\"store-description\">${description}</div>\r\n        <span class=\"tel\">${tel}</span>\r\n        <button class=\"remove-btn\">삭제하기</button>\r\n        <div class=\"store-images\">\r\n        ${thumbnails.map(thumbnail =>\r\n          `<div class=\"store-image\" style=\"background-image:url(${thumbnail});background-size: contain;\"></div>`\r\n        ).join('')}\r\n        </div>\r\n      </li>`\r\n    )\r\n    .join('')}\r\n  `;\r\n};\r\nexport default renderSelectedStoreList;\r\n","import createElement from \"../utils/createElement.js\";\r\nimport { db } from \"../utils/firebase.js\";\r\nimport Nav from \"./nav.js\";\r\n// prettier-ignore\r\nconst Voted = async params => {\r\n\r\n\r\n  const getVoteItem = async id => {\r\n    /*\r\n      voteItem의 id 값을 params로 전달받습니다.\r\n      로그인한 사용자의 voteList에서 params로 받은 id값으로 voteItem을 가져옵니다.\r\n    */\r\n    const user = localStorage.getItem('username');\r\n    const doc = await db.collection('votes').where(\"id\", \"==\", id).get();\r\n    let voteItem = {}\r\n\r\n    doc.forEach(docs => {\r\n      voteItem = docs.data();\r\n    })\r\n    kakao.vote = voteItem\r\n    return voteItem\r\n  }\r\n\r\n  const getSortedStores = stores => {\r\n    return stores.sort((prevStore, nextStore) => nextStore.countVote - prevStore.countVote)\r\n  }\r\n\r\n  const domStr = stores => createElement(`\r\n    <div class=\"voting\">\r\n      ${Nav()}\r\n      <div class=\"voting-container\">        \r\n        <div class=\"voting-list\">\r\n          ${stores.map(({ id, title, description, thumbnails, countVote }, index) => `\r\n            <div class=\"store-card ${index === 0 ? 'win-vote' : ''}\">\r\n              <div class=\"store-name\">${title}</div>\r\n              <div class=\"store-description\">${description}</div>\r\n              <div class=\"store-images\">\r\n              ${thumbnails.map(thumbnail =>\r\n                `<div class=\"store-image\" style=\"background-image:url(${thumbnail});background-size: contain;\"></div>`\r\n                ).join('')}\r\n            </div>\r\n          </div>`).join('')}\r\n        </div>\r\n      </div>\r\n      <div id=\"kakao-map\"></div>\r\n    </div>`)\r\n\r\n  const voteItem = await getVoteItem(params);\r\n\r\n  const sortedStores = getSortedStores(voteItem.stores)\r\n\r\n  return domStr(sortedStores)\r\n};\r\n\r\nexport default Voted;\r\n","import createElement from \"../utils/createElement.js\";\r\nimport { db } from \"../utils/firebase.js\";\r\nimport render from \"../utils/render.js\";\r\nimport Nav from \"./nav.js\";\r\n\r\nconst Voting = async (params) => {\r\n  const isOwner = (owner) => owner === window.localStorage.getItem(\"username\");\r\n\r\n  const isVoted = (voteId) => {\r\n    const voteList = JSON.parse(window.localStorage.getItem(\"voteList\")) ?? [];\r\n    return voteList.includes(voteId);\r\n  };\r\n\r\n  const getVoteItem = async (id) => {\r\n    const doc = await db.collection(\"votes\").where(\"id\", \"==\", id).get();\r\n    let voteItem = {};\r\n    doc.forEach((docs) => {\r\n      voteItem = docs.data();\r\n    });\r\n    kakao.vote = voteItem;\r\n    return voteItem;\r\n  };\r\n\r\n  const addVoteList = (newVote) => {\r\n    const voteList = JSON.parse(window.localStorage.getItem(\"voteList\")) ?? [];\r\n    window.localStorage.setItem(\r\n      \"voteList\",\r\n      JSON.stringify([...voteList, newVote])\r\n    );\r\n  };\r\n\r\n  const updateSelectedStoreVoteCount = async (voteId) => {\r\n    const selectedStoreList = [...document.querySelectorAll(\".voting-btn\")]\r\n      .filter(($checkbox) => $checkbox.checked)\r\n      .map(($checkbox) => $checkbox.id);\r\n    const newStoreList = voteItem.stores.map((store) =>\r\n      selectedStoreList.includes(store.id)\r\n        ? { ...store, countVote: store.countVote + 1 }\r\n        : store\r\n    );\r\n    console.log(voteItem.stores);\r\n    await db.collection(\"votes\").doc(voteId).update({ stores: newStoreList });\r\n  };\r\n\r\n  const routeHome = () => {\r\n    const HOME_PATH = \"/\";\r\n    render({ path: HOME_PATH });\r\n    window.history.pushState(null, null, HOME_PATH);\r\n  };\r\n\r\n  const handleCompleteVote = async (e) => {\r\n    if (!e.target.matches(\".end-voting\")) return;\r\n\r\n    const selectedStoreList = [\r\n      ...document.querySelectorAll(\".voting-btn\"),\r\n    ].filter(($checkbox) => $checkbox.checked);\r\n    if (selectedStoreList.length === 0) {\r\n      alert(\"투표한 목록이 없습니다\");\r\n      return;\r\n    }\r\n\r\n    addVoteList(params);\r\n    await updateSelectedStoreVoteCount(params);\r\n\r\n    alert(\"투표가 완료되었습니다!\");\r\n\r\n    routeHome();\r\n  };\r\n\r\n  const selectOnlyOne = ($input) => {\r\n    [...document.querySelectorAll(\".voting-btn\")].forEach((checkbox) => {\r\n      checkbox.checked = checkbox === $input;\r\n    });\r\n  };\r\n  // prettier-ignore\r\n  const domStr = voteItem =>\r\n    createElement(`\r\n      ${Nav()}\r\n      <div class=\"voting\">\r\n        <div class=\"voting-container\">\r\n          <div class=\"vote-information\">\r\n            <span class=\"vote-name\">${voteItem.title}</span>\r\n            <span href=\"/\" class=\"voting-link\">공유링크</span>\r\n            <div class=\"voting-deadline\">마감일 : ${voteItem.deadline}</div>\r\n            <div class=\"voting-type\">투표 방식 : ${voteItem.voteType}</div>\r\n            ${isOwner(voteItem.owner) && isVoted(voteItem.id) ? '' : '<button class=\"end-voting\">투표 완료</button>'}\r\n          </div>\r\n          \r\n          <div class=\"voting-list\">\r\n            ${voteItem.stores\r\n              .map(({ id, title, description, thumbnails }) => `\r\n              <div class=\"store-card\">\r\n              ${\r\n                isOwner(voteItem.owner) && isVoted(voteItem.id)\r\n                  ? ''\r\n                  : '<input type=\"checkbox\" id=\"${id}\" class=\"voting-btn\" name=\"voting\"/>'\r\n              }\r\n              <div class=\"store-name\">${title}</div>\r\n              <div class=\"store-description\">${description}</div>\r\n              <div class=\"store-images\">\r\n              ${thumbnails.map(thumbnail => `\r\n                <div class=\"store-image\" style=\"background-image:url(${thumbnail});background-size: contain;\"></div>\r\n                `\r\n                ).join('')}\r\n              </div>\r\n            </div>\r\n            `\r\n              ).join('')}\r\n          </div>\r\n        </div>\r\n        <div id=\"kakao-map\"></div>\r\n      </div>\r\n    </div>\r\n  `);\r\n\r\n  const endVote = () =>\r\n    createElement(`\r\n    ${Nav()}\r\n    <div class=\"vote-complete\">\r\n      <div class=\"vote-complete-message\">투표를 완료했습니다</div>\r\n    </div>\r\n  `);\r\n\r\n  const voteItem = await getVoteItem(params);\r\n\r\n  window.addEventListener(\"click\", handleCompleteVote);\r\n\r\n  window.addEventListener(\"click\", (e) => {\r\n    if (!e.target.matches(\".voting-btn\")) return;\r\n\r\n    if (voteItem.voteType === \"단일투표\") selectOnlyOne(e.target);\r\n\r\n    [...document.querySelectorAll(\".voting-btn\")].forEach((checkbox) => {\r\n      checkbox\r\n        .closest(\".store-card\")\r\n        .classList.toggle(\"selected-vote\", checkbox.checked);\r\n    });\r\n  });\r\n\r\n  return !isVoted(params) || isOwner(voteItem.owner)\r\n    ? domStr(voteItem)\r\n    : endVote();\r\n};\r\n\r\nexport default Voting;\r\n","import createElement from '../utils/createElement.js';\r\nimport render from '../utils/render.js';\r\nimport route from '../utils/route.js';\r\n\r\nconst Welcome = () =>\r\n  createElement(`\r\n  <div id=\"welcome\">\r\n  <p class=\"welcome-emoji\">🎉</p>\r\n  <p class=\"welcome-message\">가입이 완료되었습니다!</p>\r\n    <a href=\"/login\" class=\"login-btn\">로그인 하기</a>\r\n    </div>\r\n`);\r\n\r\nwindow.addEventListener('click', e => {\r\n  if (!e.target.matches('.login-btn')) return;\r\n\r\n  render(route(e));\r\n});\r\n\r\nexport default Welcome;\r\n","import render from \"./utils/render.js\";\r\nimport loadMap from \"./utils/loadMap.js\";\r\n\r\nwindow.addEventListener(\"popstate\", () => {\r\n  console.log(\"[popstate]\", window.location.pathname);\r\n  const [path, params] = window.location.pathname.split(\"/:\");\r\n\r\n  render({ path, params });\r\n});\r\nloadMap();\r\nwindow.addEventListener(\"DOMContentLoaded\", () => {\r\n  const [path, params] = window.location.pathname.split(\"/:\");\r\n  render({ path, params });\r\n});\r\n\r\nexport default render;\r\n","const createElement = domString => {\r\n  const $temp = document.createElement('template');\r\n  $temp.innerHTML = domString;\r\n  return $temp.content;\r\n};\r\n\r\nexport default createElement;\r\n","export default async function fetchImage(query = '', size = 3) {\r\n  const res = await axios.get(`https://dapi.kakao.com/v2/search/image?query=${encodeURI(query)}&size=${size}`, {\r\n    headers: {\r\n      Authorization: `KakaoAK e905344ef09f503efebe3a02312cb9ef`,\r\n    },\r\n  });\r\n  return res;\r\n}\r\n","// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyCxUWiOdQa_0eTMZe6r7sbnLMpjiVCuxEw',\r\n  authDomain: 'eat-it-6f7b8.firebaseapp.com',\r\n  projectId: 'eat-it-6f7b8',\r\n  storageBucket: 'eat-it-6f7b8.appspot.com',\r\n  messagingSenderId: '457186226254',\r\n  appId: '1:457186226254:web:d444e7ba201025bb97531f',\r\n  measurementId: 'G-8ESSYEFJEW',\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth();\r\nexport const db = firebase.firestore();\r\n","import fetchImage from \"./fetchimage.js\";\r\nimport { db } from \"./firebase.js\";\r\nconst appendKakaoAPI = () => {\r\n  const script = document.createElement(\"script\");\r\n  //prettier-ignore\r\n  script.src ='//dapi.kakao.com/v2/maps/sdk.js?appkey=c8627785e5fed8e94625831777adf1ea&libraries=services&autoload=false';\r\n  document.head.appendChild(script);\r\n\r\n  return script;\r\n};\r\nconst makeMap = () => {\r\n  var markers = [];\r\n  var infowindow = new kakao.maps.InfoWindow({ zIndex: 1 });\r\n  const mapContainer = document.createElement(\"div\");\r\n  mapContainer.id = \"map\";\r\n  var mapOption = {\r\n    center: new kakao.maps.LatLng(37.566826, 126.9786567), // 지도의 중심좌표\r\n    level: 3, // 지도의 확대 레벨\r\n  };\r\n\r\n  // 지도를 생성합니다\r\n  var map = new kakao.maps.Map(mapContainer, mapOption);\r\n  // 장소 검색 객체를 생성합니다\r\n  var ps = new kakao.maps.services.Places();\r\n  const search = (keyword) => ps.keywordSearch(keyword, placesSearchCB);\r\n\r\n  var infowindow = new kakao.maps.InfoWindow({ zIndex: 1 });\r\n\r\n  // 장소검색이 완료됐을 때 호출되는 콜백함수 입니다\r\n  function placesSearchCB(data, status, pagination) {\r\n    if (status === kakao.maps.services.Status.OK) {\r\n      // 정상적으로 검색이 완료됐으면\r\n      // 검색 목록과 마커를 표출합니다\r\n      displayPlaces(data);\r\n\r\n      // 페이지 번호를 표출합니다\r\n      displayPagination(pagination);\r\n    } else if (status === kakao.maps.services.Status.ZERO_RESULT) {\r\n      alert(\"검색 결과가 존재하지 않습니다.\");\r\n      return;\r\n    } else if (status === kakao.maps.services.Status.ERROR) {\r\n      alert(\"검색 결과 중 오류가 발생했습니다.\");\r\n      return;\r\n    }\r\n  }\r\n\r\n  // 검색 결과 목록과 마커를 표출하는 함수입니다\r\n  function displayPlaces(places) {\r\n    var listEl = document.getElementById(\"placesList\"),\r\n      menuEl = document.getElementById(\"menu_wrap\"),\r\n      fragment = document.createDocumentFragment(),\r\n      bounds = new kakao.maps.LatLngBounds(),\r\n      listStr = \"\";\r\n\r\n    removeAllChildNods(listEl);\r\n\r\n    removeMarker();\r\n\r\n    for (var i = 0; i < places.length; i++) {\r\n      var placePosition = new kakao.maps.LatLng(places[i].y, places[i].x),\r\n        marker = addMarker(placePosition, i),\r\n        itemEl = getListItem(i, places[i]);\r\n      bounds.extend(placePosition);\r\n\r\n      (function (marker, title) {\r\n        kakao.maps.event.addListener(marker, \"mouseover\", function () {\r\n          displayInfowindow(marker, title);\r\n        });\r\n\r\n        kakao.maps.event.addListener(marker, \"mouseout\", function () {\r\n          infowindow.close();\r\n        });\r\n\r\n        itemEl.onmouseover = function () {\r\n          displayInfowindow(marker, title);\r\n        };\r\n\r\n        itemEl.onmouseout = function () {\r\n          infowindow.close();\r\n        };\r\n      })(marker, places[i].place_name);\r\n\r\n      fragment.appendChild(itemEl);\r\n    }\r\n\r\n    // 검색결과 항목들을 검색결과 목록 Element에 추가합니다\r\n    listEl.appendChild(fragment);\r\n    menuEl.scrollTop = 0;\r\n\r\n    // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\r\n    map.setBounds(bounds);\r\n  }\r\n\r\n  // 검색결과 항목을 Element로 반환하는 함수입니다\r\n  function getListItem(index, places) {\r\n    const selectedStoreId = [\r\n      ...document.getElementById(\"menu_voted\")?.querySelectorAll(\"li\"),\r\n    ].map((store) => store.id);\r\n    var el = document.createElement(\"li\"),\r\n      itemStr = `\r\n        <div class=\"store-name\">${places.place_name}</div>\r\n        <div class=\"store-description\">${places.category_name}</div>\r\n        <span class=\"tel\">${places.phone}</span>\r\n        <button class=\"add-store\" ${\r\n          selectedStoreId.includes(places.id) ? \"disabled\" : \"\"\r\n        }>추가하기</button>\r\n        <div class=\"x hidden\">${places.x}</div>\r\n        <div class=\"y hidden\">${places.y}</div>\r\n        `;\r\n    el.innerHTML = itemStr;\r\n    el.className = \"item-\" + places.id;\r\n    fetchImage(places.place_name).then(({ data }) => {\r\n      el.insertAdjacentHTML(\r\n        \"beforeend\",\r\n        \"<div class='store-images'>\" +\r\n          data.documents\r\n            .map(\r\n              (store) =>\r\n                `<div class=\"store-image\" style=\"background-image: url(${store.thumbnail_url});background-size: contain;\"></div>`\r\n            )\r\n            .join(\"\") +\r\n          \"</div>\"\r\n      );\r\n    });\r\n    return el;\r\n  }\r\n\r\n  // 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\r\n  function addMarker(position, idx, title) {\r\n    var imageSrc =\r\n        \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png\", // 마커 이미지 url, 스프라이트 이미지를 씁니다\r\n      imageSize = new kakao.maps.Size(36, 37), // 마커 이미지의 크기\r\n      imgOptions = {\r\n        spriteSize: new kakao.maps.Size(36, 691), // 스프라이트 이미지의 크기\r\n        spriteOrigin: new kakao.maps.Point(0, idx * 46 + 10), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\r\n        offset: new kakao.maps.Point(13, 37), // 마커 좌표에 일치시킬 이미지 내에서의 좌표\r\n      },\r\n      markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imgOptions),\r\n      marker = new kakao.maps.Marker({\r\n        position: position, // 마커의 위치\r\n        image: markerImage,\r\n      });\r\n\r\n    marker.setMap(map); // 지도 위에 마커를 표출합니다\r\n    markers.push(marker); // 배열에 생성된 마커를 추가합니다\r\n\r\n    return marker;\r\n  }\r\n\r\n  // 지도 위에 표시되고 있는 마커를 모두 제거합니다\r\n  function removeMarker() {\r\n    for (var i = 0; i < markers.length; i++) {\r\n      markers[i].setMap(null);\r\n    }\r\n    markers = [];\r\n  }\r\n\r\n  // 검색결과 목록 하단에 페이지번호를 표시는 함수입니다\r\n  function displayPagination(pagination) {\r\n    var paginationEl = document.getElementById(\"pagination\"),\r\n      fragment = document.createDocumentFragment(),\r\n      i;\r\n\r\n    // 기존에 추가된 페이지번호를 삭제합니다\r\n    while (paginationEl.hasChildNodes()) {\r\n      paginationEl.removeChild(paginationEl.lastChild);\r\n    }\r\n\r\n    for (i = 1; i <= pagination.last; i++) {\r\n      var el = document.createElement(\"a\");\r\n      el.href = \"#\";\r\n      el.innerHTML = i;\r\n\r\n      if (i === pagination.current) {\r\n        el.className = \"on\";\r\n      } else {\r\n        el.onclick = (function (i) {\r\n          return function () {\r\n            pagination.gotoPage(i);\r\n          };\r\n        })(i);\r\n      }\r\n\r\n      fragment.appendChild(el);\r\n    }\r\n    paginationEl.appendChild(fragment);\r\n  }\r\n\r\n  // 검색결과 목록 또는 마커를 클릭했을 때 호출되는 함수입니다\r\n  // 인포윈도우에 장소명을 표시합니다\r\n  function displayInfowindow(marker, title) {\r\n    var content = '<div style=\"padding:5px;z-index:1;\">' + title + \"</div>\";\r\n\r\n    infowindow.setContent(content);\r\n    infowindow.open(map, marker);\r\n  }\r\n\r\n  // 검색결과 목록의 자식 Element를 제거하는 함수입니다\r\n  function removeAllChildNods(el) {\r\n    while (el.hasChildNodes()) {\r\n      el.removeChild(el.lastChild);\r\n    }\r\n  }\r\n\r\n  const insert = (parent) => {\r\n    removeMarker();\r\n    parent.append(mapContainer);\r\n    map.relayout();\r\n    mapContainer.firstChild.style.left = \"auto\";\r\n  };\r\n  const marker = (stores) => {\r\n    console.log(stores);\r\n    let positions = stores.map(({ title, x, y }) => ({\r\n      title,\r\n      latlng: new kakao.maps.LatLng(y, x),\r\n    }));\r\n\r\n    var imageSrc =\r\n      \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/markerStar.png\";\r\n\r\n    for (var i = 0; i < positions.length; i++) {\r\n      var imageSize = new kakao.maps.Size(24, 35);\r\n      var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize);\r\n      var marker = new kakao.maps.Marker({\r\n        map: map,\r\n        position: positions[i].latlng,\r\n      });\r\n\r\n      var customOverlay = new kakao.maps.CustomOverlay({\r\n        position: positions[i].latlng,\r\n        content: `<div style=\" border: 1px solid #292929;padding:0.5rem;background:white;margin-bottom:150px;\">${positions[i].title}</div>`,\r\n      });\r\n      customOverlay.setMap(map);\r\n    }\r\n\r\n    document\r\n      .querySelectorAll(\".info-window\")\r\n      .forEach((window) =>\r\n        console.log(window.parentElement.parentElement.style.width)\r\n      );\r\n\r\n    map.setCenter(new kakao.maps.LatLng(stores[0].y, stores[0].x));\r\n  };\r\n  return { insert, search, marker };\r\n};\r\nconst loadMap = () => {\r\n  appendKakaoAPI();\r\n\r\n  window.addEventListener(\"load\", () => {\r\n    window.kakao.maps.load(() => {\r\n      kakao.setMap = makeMap();\r\n    });\r\n  });\r\n};\r\nexport default loadMap;\r\n","import {\r\n  Home,\r\n  Login,\r\n  Voting,\r\n  Voted,\r\n  Add,\r\n  Register,\r\n  Welcome,\r\n  MakeVoteList,\r\n  NotFound,\r\n} from \"../components/index.js\";\r\nimport { auth } from \"./firebase.js\";\r\n\r\nconst $root = document.getElementById(\"root\");\r\nconst routes = [\r\n  { path: \"/\", component: Home },\r\n  { path: \"/login\", component: Login },\r\n  { path: \"/register\", component: Register },\r\n  { path: \"/home\", component: Home },\r\n  { path: \"/voting\", component: Voting },\r\n  { path: \"/voted\", component: Voted },\r\n  { path: \"/add\", component: Add },\r\n  { path: \"/welcome\", component: Welcome },\r\n  { path: \"/makeVoteList\", component: MakeVoteList },\r\n  { path: \"/notFound\", component: NotFound },\r\n];\r\n\r\nconst authPath = [\"/\", \"/home\", \"/add\"];\r\n\r\nconst render = async (url) => {\r\n  /*\r\n    투표 목록에서 더보기 버튼을 누르면 route parameter로 해당 투표의 아이디를 전달합니다.\r\n    path는 /voting/:id -> 다른 방법이 없는지 생각해보겠습니다..\r\n    component의 인수로 params를 전달합니다.\r\n  */\r\n  let _path = url?.path ?? window.location.pathname;\r\n  const params = url?.params;\r\n\r\n  const user = localStorage.getItem(\"username\");\r\n  try {\r\n    if (!user && authPath.includes(_path)) {\r\n      _path = \"/login\";\r\n      window.history.pushState(null, null, _path);\r\n    }\r\n    const component =\r\n      routes.find((route) => route.path === _path)?.component || NotFound;\r\n    $root.replaceChildren(await component(params));\r\n\r\n    if (window.kakao && document.querySelector(\"#root .map_wrap #kakao-map\")) {\r\n      kakao.setMap.insert(document.querySelector(\"#root #kakao-map\"));\r\n      kakao.setMap.search(\"강남역 맛집\");\r\n    } else if (\r\n      window.kakao &&\r\n      document.querySelector(\"#root .voting #kakao-map\")\r\n    ) {\r\n      kakao.setMap.insert(document.querySelector(\"#root #kakao-map\"));\r\n      console.log(kakao.vote);\r\n      kakao.setMap.marker(kakao.vote.stores);\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nexport default render;\r\n","const route = (e) => {\r\n  e.preventDefault();\r\n  const href = e.target.closest(\"a\").getAttribute(\"href\");\r\n  const [path, params] = href.split(\"/:\");\r\n  console.log(path, params);\r\n  if (window.location.pathname === path) return;\r\n\r\n  console.log(params ? href : path);\r\n  window.history.pushState(null, null, params ? href : path);\r\n\r\n  return { path, params };\r\n};\r\n\r\nexport default route;\r\n","import { auth, db } from './firebase.js';\r\nimport route from './route.js';\r\nimport render from '../index.js';\r\n\r\n// signin, signup에서 공통으로 사용하는 로직\r\nconst signinState = {\r\n  userid: {\r\n    value: '',\r\n    get valid() {\r\n      return (\r\n        this.value &&\r\n        /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/.test(this.value)\r\n      );\r\n    },\r\n    error: '이메일 형식에 맞게 입력해 주세요.',\r\n  },\r\n  password: {\r\n    value: '',\r\n    get valid() {\r\n      return /^[A-Za-z0-9]{6,12}$/.test(this.value);\r\n    },\r\n    error: '영문 또는 숫자를 6~12자 입력하세요.',\r\n  },\r\n  get valid() {\r\n    return this.userid.valid && this.password.valid;\r\n  },\r\n  error: '이메일과 비밀번호가 일치하지 않습니다. 다시 입력해주세요.',\r\n};\r\n\r\nconst signupState = {\r\n  ...signinState,\r\n  'confirm-password': {\r\n    value: '',\r\n    get valid() {\r\n      return signupState.password.valid && signinState.password.value === this.value;\r\n    },\r\n    error: '패스워드가 일치하지 않습니다.',\r\n  },\r\n  get valid() {\r\n    return this.userid.valid && this.password.valid && signupState['confirm-password'].valid;\r\n  },\r\n  error: '유효하지 않은 정보입니다. 다시 입력해주세요.',\r\n};\r\n\r\nlet currentPage = 'signin';\r\nlet currentState = signinState;\r\n\r\nconst setCurrentPage = page => {\r\n  if (currentPage === page) return;\r\n\r\n  currentPage = page;\r\n  currentState = page === 'signin' ? signinState : signupState;\r\n};\r\n\r\nconst toggleNav = e => {\r\n  if (!e.target.closest(`.class-toggle > .signin`) && !e.target.closest(`.class-toggle > .signup`)) return;\r\n\r\n  e.preventDefault();\r\n\r\n  const isSigninPage = e.target.closest('li').classList.contains('signin');\r\n  setCurrentPage(isSigninPage ? 'signin' : 'signup');\r\n\r\n  [...document.querySelectorAll('.class-toggle > li')].forEach($li => $li.classList.toggle('active'));\r\n\r\n  render(route(e));\r\n};\r\n\r\nconst activateButton = () => {\r\n  document.querySelector(`.${currentPage}-btn`).classList.toggle('active', currentState.valid);\r\n};\r\n\r\nconst validate = _.debounce(e => {\r\n  if (!e.target.matches(`.signin-form > input`) && !e.target.matches(`.signup-form > input`)) return;\r\n\r\n  setCurrentPage(e.target.closest('form').id);\r\n\r\n  const { name, value } = e.target;\r\n  currentState[name].value = value.trim();\r\n\r\n  document.querySelector(`.error-${name}`).textContent =\r\n    currentState[name].value && !currentState[name].valid ? currentState[name].error : '';\r\n\r\n  if (name === 'password' && currentState['confirm-password']?.value) {\r\n    document.querySelector(`.error-confirm-password`).textContent =\r\n      currentState['confirm-password'].value && !currentState['confirm-password']?.valid\r\n        ? currentState['confirm-password'].error\r\n        : '';\r\n  }\r\n  activateButton();\r\n}, 300);\r\n\r\n/* 로그인해야 접근할 수 있는 페이지에서 사용할 request */\r\nconst authRequest = async () => {\r\n  const firebaseUserIdToken = await auth.currentUser?.getIdToken(true);\r\n\r\n  /**\r\n   * getIdToken(true): 사용자의 토큰을 refresh 해준다.\r\n   * 기본적으로, 1시간이 지나면 토큰은 만료된다.\r\n   * */\r\n\r\n  const response = await fetch('/api/hello', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: 'Bearer ' + firebaseUserIdToken,\r\n    },\r\n  });\r\n};\r\n\r\nconst submit = async e => {\r\n  if (!e.target.matches('.signin-btn') && !e.target.matches('.signup-btn')) return;\r\n\r\n  e.preventDefault();\r\n\r\n  try {\r\n    if (currentPage === 'signin') {\r\n      const res = await auth.signInWithEmailAndPassword(signinState.userid.value, signinState.password.value);\r\n      localStorage.setItem('username', signinState.userid.value);\r\n      render(route(e));\r\n    }\r\n\r\n    if (currentPage === 'signup') {\r\n      const res = await auth.createUserWithEmailAndPassword(signupState.userid.value, signupState.password.value);\r\n      db.collection('users').doc(`${signupState.userid.value}`).set({});\r\n      render(route(e));\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n    document.querySelector(`.${currentPage}-form .error-message`).textContent = currentState.error;\r\n    document.querySelector(`.${currentPage}-btn`).classList.remove('active');\r\n  }\r\n};\r\n\r\n/* express를 사용해서 구현한 방법 */\r\nconst submitExpress = async e => {\r\n  if (!e.target.matches('.signin-btn') && !e.target.matches('.signup-btn')) return;\r\n\r\n  e.preventDefault();\r\n\r\n  try {\r\n    const payload = {};\r\n    Object.keys(currentState)\r\n      .filter(name => name !== 'valid')\r\n      .forEach(key => {\r\n        payload[key] = currentState[key].value;\r\n      });\r\n\r\n    const res = await axios.post(`/api/${currentPage}`, payload);\r\n    if (res.status === 200) {\r\n      console.log(`${res.data.userid} 성공~!`);\r\n      render(route(e));\r\n    }\r\n  } catch (err) {\r\n    const { response } = err;\r\n    if (response.status === 400) {\r\n      console.log(response.data);\r\n    }\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nconst logout = async e => {\r\n  if (!e.target.closest('.logout')) return;\r\n\r\n  try {\r\n    await auth.signOut();\r\n    localStorage.removeItem('username');\r\n    render(route(e));\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nconst logoutExpress = async e => {\r\n  if (!e.target.closest('.logout')) return;\r\n\r\n  try {\r\n    const res = await axios.post(`/api/logout`);\r\n    localStorage.removeItem('username');\r\n    render(route(e));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport { toggleNav, validate, submit, submitExpress, logout, logoutExpress };\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = (queue) => {\n\tif(queue && !queue.d) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach((fn) => (fn.r--));\n\t\tqueue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));\n\t}\n}\nvar wrapDeps = (deps) => (deps.map((dep) => {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then((r) => {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, (e) => {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = (fn) => (fn(queue));\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = x => {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}));\n__webpack_require__.a = (module, body, hasAwait) => {\n\tvar queue;\n\thasAwait && ((queue = []).d = 1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise((resolve, rej) => {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](x => {}));\n\tmodule.exports = promise;\n\tbody((deps) => {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = () => (currentDeps.map((d) => {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}))\n\t\tvar promise = new Promise((resolve) => {\n\t\t\tfn = () => (resolve(getResult));\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));\n\t\t\tcurrentDeps.map((dep) => (dep[webpackQueues](fnQueue)));\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));\n\tqueue && (queue.d = 0);\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./index.js\");\n",""],"names":[],"sourceRoot":""}